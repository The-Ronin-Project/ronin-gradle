[versions]
assertj="3.23.1"
axion = "1.15.3"
commonscodec="1.16.0"
commonsio="2.11.0"
commonscompress="1.23.0"
detekt = "1.23.0"
dokka = "1.8.20"
fabrikt = "10.0.0"
gradle = "8.2"
jackson = "2.15.2"
jakartavalidation="3.0.2"
jsonschematopojo = "1.2.1"
junit="5.9.3"
kotlin = "1.8.22"
kotlindsl = "4.0.14"
kotlinlogging="3.0.5"
kover = "0.6.1"
ktlint = "11.5.0"
mockk="1.13.5"
node = "3.5.0"
okhttp="4.10.0"
openapigenerator="6.6.0"
releasehub = "4.0.0"
schemavalidator="1.0.85"
semver="4.3.0"
sonarqube = "4.2.1.3168"
springboot = "3.0.10"
springdependencymanager = "1.1.0"
swaggercore="2.2.19"
swaggerparser = "2.1.16"
testcontainers = "1.17.6"
retry = "1.0.9"
coroutines = "1.6.4"

[libraries]
gradle-kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
gradle-kover = { module = "org.jetbrains.kotlinx:kover", version.ref = "kover" }
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradle-sonarqube = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonarqube" }
gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "springboot" }
gradle-spring-depmanager = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "springdependencymanager" }
gradle-spring-kotlin-core = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
gradle-spring-kotlin-jpa = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
gradle-jsonschematopojo = { module = "org.jsonschema2pojo:jsonschema2pojo-gradle-plugin", version.ref = "jsonschematopojo" }
gradle-node = { module = "com.github.node-gradle:gradle-node-plugin", version.ref = "node" }
gradle-openapi-generator = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "openapigenerator" }
gradle-releasehub = { module = "com.dipien:releases-hub-gradle-plugin", version.ref = "releasehub" }
gradle-kotlin-dsl = { module = "org.gradle.kotlin:gradle-kotlin-dsl-plugins", version.ref = "kotlindsl" }

gradle-api = { module = "dev.gradleplugins:gradle-api", version.ref = "gradle" }

spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springboot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-web = { module = "org.springframework:spring-web" }
spring-context = { module = "org.springframework:spring-context" }
spring-boot-annotation-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springboot" }

liquibase-core = { module = "org.liquibase:liquibase-core" }
mysql-connector = { module = "com.mysql:mysql-connector-j" }

commons-io = { module = "commons-io:commons-io", version.ref = "commonsio" }
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commonscompress" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlinlogging" }
swagger-core = { module = "io.swagger.core.v3:swagger-core", version.ref = "swaggercore" }
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swaggercore" }
swagger-parser = { module = "io.swagger.parser.v3:swagger-parser", version.ref = "swaggerparser" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonscodec" }
semver = { module = "org.semver4j:semver4j", version.ref = "semver" }
jgit = "org.eclipse.jgit:org.eclipse.jgit:6.8.0.202311291450-r"
json-schema-validator = { module = "com.networknt:json-schema-validator", version.ref = "schemavalidator" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
swaggerparser = { module = "io.swagger.parser.v3:swagger-parser", version.ref = "swaggerparser" }
fabrikt = { module = "com.cjbooms:fabrikt", version.ref = "fabrikt" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartavalidation" }
kotlin-coroutines-bom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-retry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version.ref = "retry" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
axion-release = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
spring-boot = { id = "org.springframework.boot", version.ref = "springboot" }
spring-depmanager = { id = "io.spring.dependency-management", version.ref = "springdependencymanager" }
spring-kotlin-core = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
jsonschematopojo = { id = "org.jsonschema2pojo", version.ref = "jsonschematopojo" }
node = { id = "com.github.node-gradle.node", version.ref = "node" }
releasehub = { id = "com.dipien.releaseshub.gradle.plugin", version.ref = "releasehub" }
kotlin-dsl = { id = "org.gradle.kotlin.kotlin-dsl", version.ref = "kotlindsl" }
