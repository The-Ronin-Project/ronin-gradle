{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "info": {
    "description": "Initial POC API definition for the questionnaire service.",
    "version": "1.0.0",
    "title": "Questionnaire Service",
    "contact": {
      "name": "Ross Lodge",
      "url": "https://github.com/projectronin/ronin-questionnaire-service",
      "email": "ross@projectronin.com"
    }
  },
  "tags": [
    {
      "name": "questionnaire",
      "description": "Related to creating, retrieving, and updating questionnaires themselves"
    },
    {
      "name": "summary",
      "description": "Summaries of questionnaire answers."
    }
  ],
  "paths": {
    "/questionnaire": {
      "post": {
        "summary": "Generate / assign a new questionnaire for a patient",
        "description": "Requests a new questionnaire assignment for a patient.  This always creates a new assignment, it does not retrieve an existing finished (or in progress, or already assigned) questionnaire.",
        "operationId": "assignQuestionnaire",
        "responses": {
          "201": {
            "description": "Questionnaire correctly assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/QuestionnaireAssignmentResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for the version of the content.  This is REQUIRED for answer submission"
              }
            }
          },
          "400": {
            "description": "Bad request.  Most likely failed validation.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.  Most likely no token sent.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.  Authentication information sent does not allow caller to do this.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.  In this case indicating that the requested patient or label set does not generate a questionnaire.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "seki": [ ]
          }
        ],
        "requestBody": {
          "description": "Request context, including patient id and labels.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "schemas/bodies.json#/components/schemas/AssignmentRequestContext"
              }
            }
          }
        },
        "tags": [
          "questionnaire"
        ]
      }
    },
    "/questionnaire/{assignmentId}": {
      "post": {
        "summary": "Submits one or more answers for a specific assignment",
        "description": "Given an existing assignment id, submits the answers to one or more questions",
        "operationId": "answerQuestions",
        "responses": {
          "204": {
            "description": "Successfully applied",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for the version of the content.  This is REQUIRED for subsequent answer submission"
              }
            }
          },
          "400": {
            "description": "Bad request.  Most likely failed validation.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.  Most likely no token sent.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.  Authentication information sent does not allow caller to do this.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.  In this case indicating that the requested questionnaire does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412": {
            "description": "The questionnaire was updated by another request, and the if-match value sent did not match the current content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "seki": [ ]
          }
        ],
        "requestBody": {
          "description": "List of answers to questions.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "schemas/bodies.json#/components/schemas/AnswerSubmission"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "assignmentId",
            "required": true,
            "schema": {
              "$ref": ".dependencies/contract-rest-clinical-data/contract-rest-clinical-data.json#/components/schemas/CreatePatientRequestBody"
            },
            "description": "The assignment ID that the answers are being submitted for"
          },
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The latest ETag header as supplied from a creation, get, or previous answer post"
          }
        ],
        "tags": [
          "questionnaire"
        ]
      },
      "get": {
        "summary": "Gets the requested assignment if it exists, with current answers",
        "description": "Given an existing assignment id, gets the requested assignment, with answer state",
        "operationId": "getQuestionnaireState",
        "responses": {
          "200": {
            "description": "Assigned questionnaire with any already submitted answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/QuestionnaireAssignmentStateResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Identifier for the version of the content.  This is REQUIRED for answer submission"
              }
            }
          },
          "400": {
            "description": "Bad request.  Most likely failed validation.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.  Most likely no token sent.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.  Authentication information sent does not allow caller to do this.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.  In this case indicating that the requested assignment does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "seki": [ ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assignmentId",
            "required": true,
            "schema": {
              "$ref": "schemas/simple-types.json#/components/schemas/QuestionnaireAssignmentId"
            },
            "description": "The assignment ID to retrieve"
          }
        ],
        "tags": [
          "questionnaire"
        ]
      }
    },
    "/summary": {
      "get": {
        "summary": "Retrieves a questionnaire summary for the requested patient, time range, and time zone",
        "description": "Given a patient UDP id",
        "operationId": "getSummary",
        "responses": {
          "200": {
            "description": "Assigned questionnaire with any already submitted answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/QuestionnaireSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.  Most likely failed validation.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.  Most likely no token sent.  See response for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.  Authentication information sent does not allow caller to do this.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.  In this case indicating that the requested assignment does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "schemas/bodies.json#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "seki": [ ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "patient-udp-id",
            "required": true,
            "schema": {
              "$ref": "schemas/simple-types.json#/components/schemas/PatientId"
            },
            "description": "The patient id to get summaries for"
          },
          {
            "in": "query",
            "name": "period-start-date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "The start date of the summary period"
          },
          {
            "in": "query",
            "name": "period-type",
            "required": true,
            "schema": {
              "$ref": "schemas/simple-types.json#/components/schemas/SummaryPeriodType"
            },
            "description": "Type of period"
          },
          {
            "in": "query",
            "name": "period-count",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "How many periods to return, starting at the start date."
          },
          {
            "in": "query",
            "name": "time-zone",
            "required": true,
            "schema": {
              "$ref": "schemas/simple-types.json#/components/schemas/TimeZone"
            },
            "description": "The time zone to calculate all data in."
          },
          {
            "in": "query",
            "name": "follow-up-level",
            "required": true,
            "schema": {
              "$ref": "schemas/simple-types.json#/components/schemas/AlertTier"
            },
            "description": "Treat this alert tier and higher as \"followUp\"."
          }
        ],
        "tags": [
          "summary"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "seki": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": { }
  }
}
